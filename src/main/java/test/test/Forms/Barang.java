/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test.test.Forms;

import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.javalite.activejdbc.Base;
import org.javalite.activejdbc.DBException;
import org.javalite.activejdbc.LazyList;
import test.test.Config.ActiveJDBC;
import test.test.Models.BarangModel;
import test.test.Models.OrangModel;

/**
 *
 * @author user
 */
public class Barang extends javax.swing.JInternalFrame {
    private DefaultTableModel model = new DefaultTableModel();
    private String ID;
    private String state;
    
    private OrangModel orang;
    
    /**
     * Creates new form Barang
     */
    
    public Barang(String orangID) {
        initComponents();
        
        ActiveJDBC.Init();
        orang = OrangModel.findById(orangID);
        Base.close();
        
        LabelNamaOrang.setText(orang.getString("nama"));
        LabelAlamatOrang.setText(orang.getString("alamat"));
        
        loadTable();
    }
    
    private void loadTable() {
        model = new DefaultTableModel();
        
        ActiveJDBC.Init();
        LazyList<BarangModel> barangs = orang.getAll(BarangModel.class);
        Base.close();
        
        model.addColumn("#ID");
        model.addColumn("Nama");
        
        ActiveJDBC.Init();
        for(BarangModel barang : barangs) {
            model.addRow(new Object[]{barang.getId(), barang.getString("nama")});
        }
        Base.close();
        
        TableBarang.setModel(model);
        
        setState("index");
    }
    
    private void hapusData() {
        ActiveJDBC.Init();
        BarangModel barang = BarangModel.findById(ID);
        try {
            barang.delete();
        } catch (DBException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        Base.close();
    }
    
    private void setState(String IndexOrEdit) {
        if (IndexOrEdit.equals("index")) {
            ButtonTambahUbah.setText("Tambah");
            ButtonResetHapus.setText("Reset");
            
            state = IndexOrEdit;
        } else if (IndexOrEdit.equals("edit")) {
            ButtonTambahUbah.setText("Ubah");
            ButtonResetHapus.setText("Hapus");
            
            state = IndexOrEdit;
        } else {
            JOptionPane.showMessageDialog(null, "Index/Edit ?");
        }
    }
    
    private void tambahData(String nama) {
        ActiveJDBC.Init();
        BarangModel barang = new BarangModel();
        barang.set("id_orang", orang.getId());
        barang.set("nama", nama);
        barang.save();
        Base.close();
    }
    
    private void ubahData(String id, String nama) {
        ActiveJDBC.Init();
        BarangModel barang = BarangModel.findById(id);
        barang.set("nama", nama);
        barang.save();
        Base.close();
    }

    private void resetForm() {
        TextNama.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollPane = new javax.swing.JScrollPane();
        TableBarang = new javax.swing.JTable();
        LabelNamaOrang = new javax.swing.JLabel();
        LabelAlamatOrang = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextNama = new javax.swing.JTextPane();
        LabelNama = new javax.swing.JLabel();
        ButtonTambahUbah = new javax.swing.JButton();
        ButtonResetHapus = new javax.swing.JButton();
        LabelNama1 = new javax.swing.JLabel();
        LabelBarang1 = new javax.swing.JLabel();
        LabelNama2 = new javax.swing.JLabel();

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        TableBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TableBarang.getTableHeader().setReorderingAllowed(false);
        TableBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableBarangMouseClicked(evt);
            }
        });
        ScrollPane.setViewportView(TableBarang);

        LabelNamaOrang.setText("valNama");

        LabelAlamatOrang.setText("valAlamat");

        jScrollPane1.setViewportView(TextNama);

        LabelNama.setText("Nama");

        ButtonTambahUbah.setText("Tambah");
        ButtonTambahUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonTambahUbahActionPerformed(evt);
            }
        });

        ButtonResetHapus.setText("Reset");
        ButtonResetHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonResetHapusActionPerformed(evt);
            }
        });

        LabelNama1.setText("Nama");

        LabelBarang1.setText("Data Orang");

        LabelNama2.setText("Alamat");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelNama)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(ButtonTambahUbah)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ButtonResetHapus))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LabelNama2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(LabelAlamatOrang))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LabelNama1)
                                .addGap(18, 18, 18)
                                .addComponent(LabelNamaOrang)))
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(LabelBarang1)
                        .addGap(67, 67, 67))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LabelNama)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonTambahUbah)
                            .addComponent(ButtonResetHapus)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LabelBarang1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelNama1)
                            .addComponent(LabelNamaOrang))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelNama2)
                            .addComponent(LabelAlamatOrang))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TableBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableBarangMouseClicked
        int i =TableBarang.getSelectedRow();
        if(i>=0){
            ID = model.getValueAt(i, 0).toString();

            ActiveJDBC.Init();
            BarangModel barang = BarangModel.findById(ID);
            Base.close();

            TextNama.setText(barang.getString("nama"));

            setState("edit");
        }
    }//GEN-LAST:event_TableBarangMouseClicked

    private void ButtonTambahUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonTambahUbahActionPerformed
        if (state.equals("index")) {
            if (TextNama.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Form Nama Masih Kosong !!!");
            } else {
                tambahData(TextNama.getText());
                resetForm();
                loadTable();
            }
        } else {
            if (TextNama.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Form Nama Masih Kosong !!!");
            } else {
                ubahData(ID, TextNama.getText());
                resetForm();
                loadTable();
            }
        }
    }//GEN-LAST:event_ButtonTambahUbahActionPerformed

    private void ButtonResetHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonResetHapusActionPerformed
        if (state.equals("edit")) {
            hapusData();
            loadTable();
        }

        resetForm();
    }//GEN-LAST:event_ButtonResetHapusActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        Orang orang = new Orang();
        JDesktopPane desktopPane = getDesktopPane();
        desktopPane.add(orang);
        orang.setVisible(true);
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonResetHapus;
    private javax.swing.JButton ButtonTambahUbah;
    private javax.swing.JLabel LabelAlamatOrang;
    private javax.swing.JLabel LabelBarang1;
    private javax.swing.JLabel LabelNama;
    private javax.swing.JLabel LabelNama1;
    private javax.swing.JLabel LabelNama2;
    private javax.swing.JLabel LabelNamaOrang;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JTable TableBarang;
    private javax.swing.JTextPane TextNama;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
